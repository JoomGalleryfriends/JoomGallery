class ImgJust{idealHeight=150;rowGap=0;columnGap=0;paddingLeft=0;paddingRight=0;paddingTop=0;paddingBottom=0;reload(){let t=this.container;getComputedStyle(t);let e=this.imgs,s=t.getBoundingClientRect().width-this.paddingLeft-this.paddingRight;if(s<=0)throw"ImgJust Error: No room for images. Client width is too small.";let i=[];for(let a of e)a.classList.remove("end"),a.classList.remove("last");for(var n=0;n<e.length;n++)i.push(e[n].naturalWidth*this.idealHeight/e[n].naturalHeight);let r=[],o=[];for(var l=new Map,d=new Map,h=-this.columnGap,g=0;g<e.length;g++){h+=i[g]+this.columnGap;let p=h-s;l.set(g,p*p),d.set(g,0)}r.push(l),o.push(d);for(var m=1;m<e.length;m++){l=new Map,d=new Map;for(var g=m;g<e.length;g++){h=i[g];let f=h-s;for(var u=f*f+r[m-1].get(g-1),c=g,y=g-1;y>=m;y--){h+=i[y]+this.columnGap;let $=h-s,w=$*$+r[m-1].get(y-1);w<u&&(u=w,c=y)}l.set(g,u),d.set(g,c)}r.push(l),o.push(d)}var m=0,v=m,u=r[m].get(e.length-1);for(m++;m<r.length;m++){let x=r[m].get(e.length-1);x<u&&(u=x,v=m)}for(var _=[],G=e.length,m=v;m>=0;m--){let L=G-1,R=o[m].get(L);_.unshift({start:R,end:L}),G=R}for(var B of _){for(var I=0,n=B.start;n<=B.end;n++)I+=i[n],e[n].style.marginBottom=this.rowGap+"px";let H=s-(B.end-B.start)*this.columnGap,J=Math.round(this.idealHeight*H/I);for(var E=0,n=B.start;n<B.end;n++){let T=Math.round(i[n]*H/I);E+=T+this.columnGap,e[n].style.width=T+"px",e[n].style.height=J+"px",e[n].style.marginRight=this.columnGap+"px"}e[B.end].style.width=s-E+"px",e[B.end].style.height=J+"px",e[B.end].style.marginRight="0",e[B.end].classList.add("end")}let C=_[_.length-1];for(var n=C.start;n<=C.end;n++)e[n].style.marginBottom="0",e[n].classList.add("last");for(let b of e)b.style.display="block"}addImages(t){for(let e of t)e.style.display="none",this.imgs.push(e)}constructor(t,e=[],s={}){for(var[i,a]of Object.entries(s))this[i]=a;if(!t)throw"ImgJust Error: missing first argument in constructor: container";if(!e)throw"ImgJust Error: missing second argument in constructor: imgs";this.container=t,this.imgs=[],t.style.display="flex",t.style.flexFlow="row wrap",t.style.paddingTop=this.paddingTop+"px",t.style.paddingBottom=this.paddingBottom+"px",t.style.paddingLeft=this.paddingLeft+"px",t.style.paddingRight=this.paddingRight+"px",this.addImages(e),this.reload(),addEventListener("resize",t=>this.reload())}}